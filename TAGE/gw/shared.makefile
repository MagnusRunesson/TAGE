##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.10.0-B14] date: [Sat Nov 21 15:39:30 CET 2020] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------


######################################
# building variables
######################################
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES += \
../../../TAGE/gw/Core/Src/flash.c \
../../../TAGE/gw/Core/Src/lcd.c \
../../../TAGE/gw/Core/Src/buttons.c \
../../../TAGE/gw/Core/Src/fontprint.c \
../../../TAGE/gw/Core/Src/mem.c \
../../../TAGE/gw/Core/Src/debug.c \
../../../TAGE/gw/Core/Src/input.c \
../../../TAGE/gw/Core/Src/draw.c \
../../../TAGE/gw/Core/Src/stm32h7xx_it.c \
../../../TAGE/gw/Core/Src/stm32h7xx_hal_msp.c \
../../../TAGE/gw/Core/Src/system_stm32h7xx.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ospi.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai_ex.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dac.c \
../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_wwdg.c

CPP_SOURCES += ../../../TAGE/gw/Core/Src/main.cpp \
../../../TAGE/gw/Core/Src/new.cpp \
../../../TAGE/gw/Core/Src/test.cpp \
../../../TAGE/Engine/Audio/AudioData.cpp \
../../../TAGE/Engine/Audio/AudioMixer.cpp \
../../../TAGE/Engine/Audio/AudioSource.cpp \
../../../TAGE/Engine/Audio/AudioStream.cpp \
../../../TAGE/Engine/Graphics/Animation.cpp \
../../../TAGE/Engine/Graphics/Image.cpp \
../../../TAGE/Engine/Graphics/Screen.cpp \
../../../TAGE/Engine/Graphics/Sprite.cpp \
../../../TAGE/Engine/Graphics/SpriteRenderer.cpp \
../../../TAGE/Engine/Graphics/TileBank.cpp \
../../../TAGE/Engine/Graphics/TileMap.cpp \
../../../TAGE/Engine/Graphics/TileRenderer.cpp \
../../../TAGE/Engine/Math/FixedPoint.cpp \
../../../TAGE/Engine/Math/fp2d.cpp \
../../../TAGE/Engine/Math/fpmath.cpp \
../../../TAGE/Engine/Math/sinetable.cpp \
../../../TAGE/Engine/Scene/Camera.cpp \
../../../TAGE/Engine/Scene/GameObject.cpp \
../../../TAGE/Engine/Scene/GameObjectManager.cpp \
../../../TAGE/Engine/Scene/GameObjectTemplate.cpp \
../../../TAGE/Engine/BitHelpers.cpp \
../../../TAGE/Engine/Debug.cpp \
../../../TAGE/AbstractionLayer/Joypad.cpp \
../../../TAGE/AbstractionLayer/AudioHandler.cpp


# ASM sources
ASM_SOURCES +=  \
../../../TAGE/gw/startup_stm32h7b0xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DHAL_DAC_MODULE_ENABLED \
-DHAL_WWDG_MODULE_ENABLED \
-DSTM32H7B0xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES += \
-I../../../TAGE \
-I../../../TAGE/Engine \
-I../../../TAGE/AbstractionLayer \
-I../../../TAGE/AbstractionLayer/Arduino \
-I../../../TAGE/gw/Core/Inc \
-I../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Inc \
-I../../../TAGE/gw/Drivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-I../../../TAGE/gw/Drivers/CMSIS/Device/ST/STM32H7xx/Include \
-I../../../TAGE/gw/Drivers/CMSIS/Include


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2 -O0
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

CPPFLAGS = $(CFLAGS) -fno-rtti -fno-exceptions

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = ../../../TAGE/gw/STM32H7B0VBTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS =
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))

vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
vpath %.c $(sort $(dir $(C_SOURCES)))

# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
	$(CC) -c $(CPPFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) $(LDSCRIPT) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		



OPENOCD ?= openocd
OCDIFACE ?= interface/stlink.cfg

flash: $(BUILD_DIR)/$(TARGET).bin
	dd if=$(BUILD_DIR)/$(TARGET).bin of=$(BUILD_DIR)/$(TARGET)_flash.bin bs=1024 count=128
	$(OPENOCD) -f $(OCDIFACE) -c "transport select hla_swd" -f "target/stm32h7x.cfg" -c "reset_config none; program $(BUILD_DIR)/$(TARGET)_flash.bin 0x08000000 verify reset exit"

.PHONY: flash

GDB ?= $(PREFIX)gdb

debug: $(BUILD_DIR)/$(TARGET).elf
	$(GDB) $< -ex "target extended-remote :3333"
.PHONY: debug


#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
